<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feign.task.mybatis.mapper.UserMapper">
    <!-- 自定义结果集，自定义结果集是select语句返回时用的，下面的select语句 中必须指明对应的结果集id-->
    <resultMap id="userMap" type="com.feign.task.mybatis.UserBean">
        <!-- 这里的id对应表的主键字段 -->
        <!-- <id property="id" column="id" javaType="java.lang.Integer"></id> -->

        <!-- 下面是对应表的其他字段-->
        <result property="username" column="username"
            javaType="java.lang.String"></result>
        <result property="password" column="password"
            javaType="java.lang.String"></result>
        <result property="account" column="account"
            javaType="java.lang.Double"></result>
    </resultMap>

    <!-- 在各种标签中的id属性必须和接口中的方法名相对应 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 -->
    <!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys 
        方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->
    <!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 
        语句的 selectKey 子元素设置它的值。默认：不设置。 -->
    <!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值 -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into user (username,password,account) values
        (#{username},#{password},#{account})
    </insert>

    <!--下面使用的是动态sql，判断字段是否为null，不为空才去赋值-->
    <update id="updateUser"
            parameterType="com.feign.task.mybatis.UserBean">
        update `user` set
        <if test="username != null">
            username=#{username}
        </if>
        <if test="password != null">
            ,password=#{password}
        </if>
        <if test="account != 0.0">
            ,account=#{account}
        </if>
        where
        id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from `user` where
        id=#{id}
    </delete>

    <select id="selectUserById" parameterType="int"
            resultMap="userMap">
        select * from `user` where id=#{id}
    </select>

    <select id="selectAllUser" resultMap="userMap">
        select * from `user`
    </select>

</mapper>